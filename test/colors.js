const types = require('../src')

const fns = {
  isRGBAObject: [
    { fn: () => types.isRGBAObject({ r: 0, g: 0, b: 0, a: 0 }), expect: true },
    { fn: () => types.isRGBA({ r: 0, g: 0, b: 0, a: 0 }), expect: true },
    { fn: () => types.rgba({ r: 0, g: 0, b: 0, a: 0 }), expect: true },
    { fn: () => types.rgba({ r: 0, g: 0, b: 0 }), expect: false },
    { fn: () => types.rgba({}), expect: false },
    { fn: () => types.rgba(''), expect: false },
    { fn: () => types.rgba(), expect: false },
  ],
  isRGBObject: [
    { fn: () => types.isRGBObject({ r: 0, g: 0, b: 0, a: 0 }), expect: true },
    { fn: () => types.isRGB({ r: 0, g: 0, b: 0, a: 0 }), expect: true },
    { fn: () => types.rgb({ r: 0, g: 0, b: 0, a: 0 }), expect: true },
    { fn: () => types.rgb({ r: 0, g: 0, b: 0 }), expect: true },
    { fn: () => types.rgb({}), expect: false },
    { fn: () => types.rgb(''), expect: false },
    { fn: () => types.rgb(), expect: false },
  ],
  isHexAlphaColor: [
    { fn: () => types.isHexAlphaColor('#ffffffff'), expect: true },
    { fn: () => types.hexAlphaColor('#ffffffff'), expect: true },
    { fn: () => types.isHexa('#ffffffff'), expect: true },
    { fn: () => types.hexa('#ffffffff'), expect: true },
    { fn: () => types.hexa('#00000000'), expect: true },
    { fn: () => types.hexa('#ffff'), expect: true },
    { fn: () => types.hexa('#ffffff'), expect: false },
    { fn: () => types.hexa(''), expect: false },
    { fn: () => types.hexa('ffffff'), expect: false },
    { fn: () => types.hexa(0), expect: false },
  ],
  isHexa4: [
    { fn: () => types.isHexAlphaColor4('#0000'), expect: true },
    { fn: () => types.hexAlphaColor4('#0000'), expect: true },
    { fn: () => types.isHexa4('#0000'), expect: true },
    { fn: () => types.hexa4('#0000'), expect: true },
    { fn: () => types.hexa4('#000'), expect: false },
    { fn: () => types.hexa4('#00000'), expect: false },
    { fn: () => types.hexa4('#00000000'), expect: false },
  ],
  isHexa8: [
    { fn: () => types.isHexAlphaColor8('#00000000'), expect: true },
    { fn: () => types.isHexa8('#00000000'), expect: true },
    { fn: () => types.hexa8('#00000000'), expect: true },
    { fn: () => types.hexa8('#0000'), expect: false },
    { fn: () => types.hexa8('#000'), expect: false },
    { fn: () => types.hexa8('#00000'), expect: false },
  ],
  isHexColor: [
    { fn: () => types.isHexColor('#ffffffff'), expect: true },
    { fn: () => types.isHex('#ffffffff'), expect: true },
    { fn: () => types.hex('#ffffffff'), expect: true },
    { fn: () => types.hex('#ffffff'), expect: true },
    { fn: () => types.hex('#ffff'), expect: true },
    { fn: () => types.hex('#fff'), expect: true },
    { fn: () => types.hex(''), expect: false },
    { fn: () => types.hex(0), expect: false },
    { fn: () => types.hex('#fffffff'), expect: false },
    { fn: () => types.hex('#fffff'), expect: false },
    { fn: () => types.hex('fff'), expect: false },
  ],
  isHex3: [
    { fn: () => types.isHexColor3('#000'), expect: true },
    { fn: () => types.hexColor3('#000'), expect: true },
    { fn: () => types.isHex3('#000'), expect: true },
    { fn: () => types.hex3('#000'), expect: true },
    { fn: () => types.isHex3('000'), expect: false },
    { fn: () => types.isHex3(''), expect: false },
    { fn: () => types.isHex3('#'), expect: false },
    { fn: () => types.isHex3('#0'), expect: false },
    { fn: () => types.isHex3('#00'), expect: false },
    { fn: () => types.isHex3('#0000'), expect: false },
    { fn: () => types.isHex3('#00000'), expect: false },
    { fn: () => types.isHex3('#000000'), expect: false },
    { fn: () => types.isHex3('#0000000'), expect: false },
    { fn: () => types.isHex3('#00000000'), expect: false },
  ],
  isHex6: [
    { fn: () => types.isHexColor6('#000000'), expect: true },
    { fn: () => types.hexColor6('#000000'), expect: true },
    { fn: () => types.isHex6('#000000'), expect: true },
    { fn: () => types.hex6('#000000'), expect: true },
    { fn: () => types.isHex6(''), expect: false },
    { fn: () => types.isHex6('#'), expect: false },
    { fn: () => types.isHex6('#0'), expect: false },
    { fn: () => types.isHex6('#00'), expect: false },
    { fn: () => types.isHex6('#000'), expect: false },
    { fn: () => types.isHex6('#0000'), expect: false },
    { fn: () => types.isHex6('#00000'), expect: false },
    { fn: () => types.isHex6('#0000000'), expect: false },
    { fn: () => types.isHex6('#00000000'), expect: false },
  ],
  isHex4: [
    { fn: () => types.isHexColor4('#0000'), expect: true },
    { fn: () => types.hexColor4('#0000'), expect: true },
    { fn: () => types.isHex4('#0000'), expect: true },
    { fn: () => types.hex4('#0000'), expect: true },
    { fn: () => types.isHex4(''), expect: false },
    { fn: () => types.isHex4('#'), expect: false },
    { fn: () => types.isHex4('#0'), expect: false },
    { fn: () => types.isHex4('#00'), expect: false },
    { fn: () => types.isHex4('#000'), expect: false },
    { fn: () => types.isHex4('#00000'), expect: false },
    { fn: () => types.isHex4('#000000'), expect: false },
    { fn: () => types.isHex4('#0000000'), expect: false },
    { fn: () => types.isHex4('#00000000'), expect: false },
  ],
  isHex8: [
    { fn: () => types.isHexColor8('#00000000'), expect: true },
    { fn: () => types.hexColor8('#00000000'), expect: true },
    { fn: () => types.isHex8('#00000000'), expect: true },
    { fn: () => types.hex8('#00000000'), expect: true },
    { fn: () => types.isHex8(''), expect: false },
    { fn: () => types.isHex8('#'), expect: false },
    { fn: () => types.isHex8('#0'), expect: false },
    { fn: () => types.isHex8('#00'), expect: false },
    { fn: () => types.isHex8('#000'), expect: false },
    { fn: () => types.isHex8('#0000'), expect: false },
    { fn: () => types.isHex8('#00000'), expect: false },
    { fn: () => types.isHex8('#000000'), expect: false },
    { fn: () => types.isHex8('#0000000'), expect: false },
  ],
  isColor: [
    { fn: () => types.isColor('#000'), expect: true },
    { fn: () => types.color('#000'), expect: true },
    { fn: () => types.col('#000'), expect: true },
    { fn: () => types.isColor('#0000'), expect: true },
    { fn: () => types.isColor('#000000'), expect: true },
    { fn: () => types.isColor('#00000000'), expect: true },
    { fn: () => types.isColor('#0000000'), expect: false },
    { fn: () => types.isColor('#00000'), expect: false },
    { fn: () => types.isColor('#00'), expect: false },
    { fn: () => types.isColor('#0'), expect: false },
  ],
}

module.exports = fns
