// @flow

export type Test = (ele: any, types: string | Array<string>, ...addTypes: Array<string>) => boolean
export type TestWithTypes = (ele : any, ...types : Array<string>) => boolean
export type TestWithoutTypes = (ele : any) => boolean

export type ArrayOfStringsOrString = Array<string> | string


declare export var test: (ele: any, types: string | Array<string>, ...addTypes: Array<string>) => boolean

declare export var is: (ele : any, ...types : Array<string>) => boolean

declare export var not: TestWithTypes

declare export var isArray: TestWithoutTypes

declare export var isBoolean: TestWithoutTypes

declare export var isDefined: TestWithoutTypes

declare export var isFunction: TestWithoutTypes

declare export var isNumber: TestWithoutTypes

declare export var isInteger: TestWithoutTypes

declare export var isFloat: TestWithoutTypes

declare export var isObject: TestWithoutTypes

declare export var isString: TestWithoutTypes

declare export var isRGBAObject: TestWithoutTypes

declare export var isRGBObject: TestWithoutTypes

declare export var isHexColor: TestWithoutTypes

declare export var isHexAlphaColor: TestWithoutTypes

declare export var isColor: TestWithoutTypes

declare export var isDate: TestWithoutTypes

declare export var isTruthy: TestWithoutTypes

declare export var isFalsy: TestWithoutTypes

declare export var isEmpty: TestWithoutTypes

declare export var isError: TestWithoutTypes

declare export var isIterable: TestWithoutTypes

declare export var isEmail: TestWithoutTypes
